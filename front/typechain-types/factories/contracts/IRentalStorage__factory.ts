/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IRentalStorage,
  IRentalStorageInterface,
} from "../../contracts/IRentalStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lendId",
        type: "uint256",
      },
    ],
    name: "getLendInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lenderWallet",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct CommonTypes.LendInfo",
        name: "lendInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "getRentInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lendId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renterWallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "returnAt",
            type: "uint256",
          },
        ],
        internalType: "struct CommonTypes.RentInfo",
        name: "rentInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "_flowRate",
        type: "int96",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "onReturned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "ownerByWallet",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "registerWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "returnScheduledRent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lendId",
        type: "uint256",
      },
    ],
    name: "unList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "validateExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "walletByOwner",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRentalStorage__factory {
  static readonly abi = _abi;
  static createInterface(): IRentalStorageInterface {
    return new utils.Interface(_abi) as IRentalStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRentalStorage {
    return new Contract(address, _abi, signerOrProvider) as IRentalStorage;
  }
}
