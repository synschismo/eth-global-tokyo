/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RentalStorage,
  RentalStorageInterface,
} from "../../contracts/RentalStorage";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lendId",
        type: "uint256",
      },
    ],
    name: "getLendInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "lenderWallet",
            type: "address",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "int96",
            name: "flowRate",
            type: "int96",
          },
        ],
        internalType: "struct CommonTypes.LendInfo",
        name: "lendInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "getRentInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "lendId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "tokenAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "renterWallet",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "returnAt",
            type: "uint256",
          },
        ],
        internalType: "struct CommonTypes.RentInfo",
        name: "rentInfo",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "lendIds",
    outputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
    ],
    name: "lendInfoList",
    outputs: [
      {
        internalType: "address",
        name: "lenderWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "int96",
        name: "flowRate",
        type: "int96",
      },
    ],
    name: "list",
    outputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_rentId",
        type: "uint256",
      },
    ],
    name: "onReturned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "ownerByWallet",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "registerWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "returnAt",
        type: "uint256",
      },
    ],
    name: "rent",
    outputs: [
      {
        internalType: "uint256",
        name: "rentId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "rentIds",
    outputs: [
      {
        internalType: "uint256",
        name: "rentId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentId",
        type: "uint256",
      },
    ],
    name: "rentInfoList",
    outputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "renterWallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "returnAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rentId",
        type: "uint256",
      },
    ],
    name: "returnScheduledRent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract WalletFactory",
        name: "_walletFactory",
        type: "address",
      },
    ],
    name: "setWalletFactory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lendId",
        type: "uint256",
      },
    ],
    name: "unList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "validateExecution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "walletByOwner",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6118a38061007e6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80637ebf879c116100ad578063d1e143bb11610071578063d1e143bb146103f7578063d400d0421461040a578063d8f25d3a14610492578063f1670589146104bb578063f2fde38b146104e657600080fd5b80637ebf879c1461036c578063882331671461037f5780638da5cb5b146103c05780638e24852f146103d157806396793725146103e457600080fd5b806349972089116100f457806349972089146102075780634e932e721461021a57806363a36e9e146102de578063715018a614610351578063783a112b1461035957600080fd5b80630ff41c58146101265780631ba7994a1461013b57806327d6051d146101635780632e890d49146101ce575b600080fd5b6101396101343660046114bd565b6104f9565b005b61014e61014936600461152e565b6106dd565b60405190151581526020015b60405180910390f35b6101766101713660046114bd565b610824565b60405161015a9190815181526020808301516001600160a01b039081169183019190915260408084015190830152606080840151909116908201526080808301519082015260a0918201519181019190915260c00190565b6101f96101dc3660046115da565b600660209081526000928352604080842090915290825290205481565b60405190815260200161015a565b6101396102153660046114bd565b6108d4565b61029a6102283660046114bd565b6040805160808082018352600080835260208084018290528385018290526060938401829052948152600885528390208351918201845280546001600160a01b03908116835260018201541694820194909452600284015492810192909252600390920154600b0b9181019190915290565b60405161015a919081516001600160a01b0390811682526020808401519091169082015260408083015190820152606091820151600b0b9181019190915260800190565b6103236102ec3660046114bd565b60086020526000908152604090208054600182015460028301546003909301546001600160a01b03928316939190921691600b0b84565b604080516001600160a01b03958616815294909316602085015291830152600b0b606082015260800161015a565b610139610a4f565b6101f9610367366004611606565b610a63565b61013961037a366004611628565b610d61565b6103a861038d366004611628565b6003602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161015a565b6000546001600160a01b03166103a8565b6101396103df3660046114bd565b610d8b565b6101396103f236600461164c565b611037565b6101f9610405366004611685565b6111be565b6104596104183660046114bd565b60096020526000908152604090208054600182015460028301546003840154600485015460059095015493946001600160a01b039384169492939091169186565b604080519687526001600160a01b03958616602088015286019390935292166060840152608083019190915260a082015260c00161015a565b6103a86104a0366004611628565b6002602052600090815260409020546001600160a01b031681565b6101f96104c93660046115da565b600760209081526000928352604080842090915290825290205481565b6101396104f4366004611628565b61139a565b336000908152600260205260409020546001600160a01b03166105375760405162461bcd60e51b815260040161052e906116ce565b60405180910390fd5b600081815260086020908152604091829020825160808101845281546001600160a01b0390811680835260018401549091169382019390935260028201549381019390935260030154600b0b60608301526105a45760405162461bcd60e51b815260040161052e906116fe565b6020808201516001600160a01b031660009081526007825260408082208185015183529092522054801561061a5760405162461bcd60e51b815260206004820152601a60248201527f57616c6c65743a206974656d2069732072656e746564206e6f77000000000000604482015260640161052e565b81516001600160a01b0316331461066c5760405162461bcd60e51b81526020600482015260166024820152752bb0b63632ba1d103737ba1034ba32b69037bbb732b960511b604482015260640161052e565b506020808201516001600160a01b0316600090815260068252604080822093810151825292825282812081905592835260089052812080546001600160a01b031990811682556001820180549091169055600281019190915560030180546bffffffffffffffffffffffff19169055565b6020810151600090816001600160e01b031982166323b872dd60e01b148061071557506001600160e01b03198216635c46a7ef60e11b145b8061073057506001600160e01b03198216632142170760e11b145b1561073c575060808301515b635dd34b9b60e01b6001600160e01b031983160161075f5760009250505061081e565b63f6a1584d60e01b6001600160e01b031983160161077e575060408301515b6317ad327360e31b6001600160e01b031983160161079d575060408301515b6001600160a01b03808616600090815260066020908152604080832085845282528083205483526008825291829020825160808101845281548516808252600183015490951692810192909252600281015492820192909252600390910154600b0b60608201529015610816576000935050505061081e565b600193505050505b92915050565b61086f6040518060c001604052806000815260200160006001600160a01b031681526020016000815260200160006001600160a01b0316815260200160008152602001600081525090565b50600090815260096020908152604091829020825160c0810184528154815260018201546001600160a01b039081169382019390935260028201549381019390935260038101549091166060830152600481015460808301526005015460a082015290565b6108dc611413565b600081815260096020908152604091829020825160c0810184528154815260018201546001600160a01b03908116938201939093526002820154938101939093526003810154909116606083018190526004820154608084015260059091015460a08301526109885760405162461bcd60e51b815260206004820152601860248201527715d85b1b195d0e881c995b9d1259081b9bdd08199bdd5b9960421b604482015260640161052e565b60008160a0015111801561099f5750428160a00151105b6109eb5760405162461bcd60e51b815260206004820152601e60248201527f57616c6c65743a2072657475726e4174206973206e6f74207061737365640000604482015260640161052e565b60608101516040516376133edf60e11b8152600481018490526001600160a01b039091169063ec267dbe90602401600060405180830381600087803b158015610a3357600080fd5b505af1158015610a47573d6000803e3d6000fd5b505050505050565b610a57611413565b610a61600061146d565b565b336000908152600260205260408120546001600160a01b0316610a985760405162461bcd60e51b815260040161052e906116ce565b600083815260086020908152604091829020825160808101845281546001600160a01b0390811680835260018401549091169382019390935260028201549381019390935260030154600b0b6060830152339190610b085760405162461bcd60e51b815260040161052e906116fe565b6020808201516001600160a01b0316600090815260068252604080822081850151835290925220548514610b4e5760405162461bcd60e51b815260040161052e906116fe565b600560008154610b5d90611735565b9182905550815160608301516040516328c2632d60e21b8152600481018490526001600160a01b038084166024830152600b9290920b604482015292955090919084169063a3098cb490606401600060405180830381600087803b158015610bc457600080fd5b505af1925050508015610bd5575060015b610c2657610be161175c565b806308c379a003610c1a5750610bf5611778565b80610c005750610c1c565b8060405162461bcd60e51b815260040161052e9190611802565b505b3d6000803e3d6000fd5b6020820151604080840151905163bd544fed60e01b81526001600160a01b038681166004830152928316602482015260448101919091529082169063bd544fed90606401600060405180830381600087803b158015610c8457600080fd5b505af1925050508015610c95575060015b610ca157610be161175c565b50602080820180516001600160a01b03908116600090815260078452604080822095810180518352958552808220889055805160c0810182528a815293518316848601908152955184820190815296831660608501908152426080860190815260a086018b81528a85526009909752919092209351845594516001840180549184166001600160a01b0319928316179055955160028401555160038301805491909216951694909417909355905160048301555160059091015592915050565b610d69611413565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b336000908152600260205260409020546001600160a01b0316610dc05760405162461bcd60e51b815260040161052e906116ce565b600081815260096020908152604091829020825160c0810184528154815260018201546001600160a01b03908116938201939093526002820154938101939093526003810154909116606083018190526004820154608084015260059091015460a0830152610e6c5760405162461bcd60e51b815260206004820152601860248201527715d85b1b195d0e881c995b9d1259081b9bdd08199bdd5b9960421b604482015260640161052e565b8051600090815260086020908152604091829020825160808101845281546001600160a01b0390811680835260018401549091169382019390935260028201549381019390935260030154600b0b6060830152610edb5760405162461bcd60e51b815260040161052e906116fe565b80600001516001600160a01b031682602001516001600160a01b0316636352211e84604001516040518263ffffffff1660e01b8152600401610f1f91815260200190565b602060405180830381865afa158015610f3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f609190611850565b6001600160a01b031614610fc25760405162461bcd60e51b815260206004820152602360248201527f52656e74616c53746f726167653a206974656d206973206e6f742072657475726044820152621b995960ea1b606482015260840161052e565b505060008181526009602081815260408084206001810180546001600160a01b031686526007845282862060028301805488529085529286208690559585529290915282825583546001600160a01b031990811690945582905560038101805490931690925560048201819055600590910155565b6001546001600160a01b031633148061105a57506000546001600160a01b031633145b61109a5760405162461bcd60e51b815260206004820152601160248201527027b7363c9037b933b0b734bd30ba34b7b760791b604482015260640161052e565b6001600160a01b03828116600090815260036020526040902054161561110c5760405162461bcd60e51b815260206004820152602160248201527f57616c6c65743a20616c726561647920726567697374657265642077616c6c656044820152601d60fa1b606482015260840161052e565b6001600160a01b0381811660009081526002602052604090205416156111745760405162461bcd60e51b815260206004820181905260248201527f57616c6c65743a20616c72656164792072656769737465726564206f776e6572604482015260640161052e565b6001600160a01b0390811660008181526002602090815260408083208054959096166001600160a01b03199586168117909655948252600390529290922080549091169091179055565b336000908152600260205260408120546001600160a01b03166111f35760405162461bcd60e51b815260040161052e906116ce565b600082600b0b136112575760405162461bcd60e51b815260206004820152602860248201527f57616c6c65743a20666565506572536563206d75737420626520677265617465604482015267072207468616e20360c41b606482015260840161052e565b60046000815461126690611735565b91829055506001600160a01b0385166000908152600660209081526040808320878452909152902054909150156112df5760405162461bcd60e51b815260206004820152601f60248201527f57616c6c65743a206974656d20697320616c7265616479206c697374696e6700604482015260640161052e565b6001600160a01b03938416600081815260066020908152604080832087845282528083208590558051608081018252338152808301948552808201978852600b9690960b606087019081528584526008909252909120935184546001600160a01b031990811691881691909117855591516001850180549093169616959095179055915160028201559151600390920180546bffffffffffffffffffffffff19166bffffffffffffffffffffffff9093169290921790915590565b6113a2611413565b6001600160a01b0381166114075760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161052e565b6114108161146d565b50565b6000546001600160a01b03163314610a615760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161052e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156114cf57600080fd5b5035919050565b6001600160a01b038116811461141057600080fd5b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611527576115276114eb565b6040525050565b6000806040838503121561154157600080fd5b823561154c816114d6565b915060208381013567ffffffffffffffff8082111561156a57600080fd5b818601915086601f83011261157e57600080fd5b813581811115611590576115906114eb565b60405191506115a8601f8201601f1916850183611501565b80825287848285010111156115bc57600080fd5b80848401858401376000848284010152508093505050509250929050565b600080604083850312156115ed57600080fd5b82356115f8816114d6565b946020939093013593505050565b6000806040838503121561161957600080fd5b50508035926020909101359150565b60006020828403121561163a57600080fd5b8135611645816114d6565b9392505050565b6000806040838503121561165f57600080fd5b823561166a816114d6565b9150602083013561167a816114d6565b809150509250929050565b60008060006060848603121561169a57600080fd5b83356116a5816114d6565b9250602084013591506040840135600b81900b81146116c357600080fd5b809150509250925092565b60208082526016908201527515d85b1b195d0e881b9bdd081c9959da5cdd195c995960521b604082015260600190565b60208082526018908201527f57616c6c65743a206c656e644964206e6f7420666f756e640000000000000000604082015260600190565b60006001820161175557634e487b7160e01b600052601160045260246000fd5b5060010190565b600060033d11156117755760046000803e5060005160e01c5b90565b600060443d10156117865790565b6040516003193d81016004833e81513d67ffffffffffffffff81602484011181841117156117b657505050505090565b82850191508151818111156117ce5750505050505090565b843d87010160208285010111156117e85750505050505090565b6117f760208286010187611501565b509095945050505050565b600060208083528351808285015260005b8181101561182f57858101830151858201604001528201611813565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561186257600080fd5b8151611645816114d656fea264697066735822122050a095550ce03e680a85892784fe477cd69a8662dceeff65a591d83291941ce664736f6c63430008120033";

type RentalStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RentalStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RentalStorage__factory extends ContractFactory {
  constructor(...args: RentalStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RentalStorage> {
    return super.deploy(overrides || {}) as Promise<RentalStorage>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RentalStorage {
    return super.attach(address) as RentalStorage;
  }
  override connect(signer: Signer): RentalStorage__factory {
    return super.connect(signer) as RentalStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RentalStorageInterface {
    return new utils.Interface(_abi) as RentalStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RentalStorage {
    return new Contract(address, _abi, signerOrProvider) as RentalStorage;
  }
}
